{"ast":null,"code":"var _jsxFileName = \"/home/angry-dogman/.repos/React-Projects/sorting-visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // hook for array of random values\n  const [displayArr, setDispArr] = useState(Array.from({\n    length: 150\n  }, (_, index) => Math.floor(Math.random() * (150 - 5 + 1) + 5)));\n\n  // change array to new array with random values\n  function generateNewArray() {\n    setDispArr(Array.from({\n      length: 150\n    }, (_, index) => Math.floor(Math.random() * (150 - 5 + 1) + 5)));\n  }\n\n  // genare the divs that correspond to the values in the array\n  function genArrDivs() {\n    return displayArr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '' + num / 150 * 100 + '%',\n        backgroundColor: \"rgb(243, 220, 15)\"\n      },\n      className: \"num-bar\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this));\n  }\n\n  // implementation of bubble-sort\n  function bubbleSort() {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    let swapArr = displayArr;\n    let n = swapArr.length;\n    for (let i = 0; i < n - 1; i++) {\n      for (let j = 0; j < n - i - 1; j++) {\n        setTimeout(() => {\n          numBars[j].style.backgroundColor = \"red\";\n          numBars[j + 1].style.backgroundColor = \"red\";\n        }, j * 30);\n        if (swapArr[j] > swapArr[j + 1]) {\n          //swap\n          setTimeout(() => {\n            numBars[j].style.height = '' + swapArr[j + 1] / 150 * 100 + '%';\n            numBars[j + 1].style.height = '' + swapArr[j] / 150 * 100 + '%';\n          }, (j + 1) * 30);\n          let temp = swapArr[j + 1];\n          swapArr[j + 1] = swapArr[j];\n          swapArr[j] = temp;\n        }\n        setTimeout(() => {\n          numBars[j].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[j + 1].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, (j + 1) * 30);\n      }\n      // weird issue\n      if (i == n - 2 && !sorted) {\n        setTimeout(() => {\n          let temp = numBars[n - 1].style.height;\n          numBars[n - 1].style.height = numBars[n - 2].style.height;\n          numBars[n - 2].style.height = temp;\n        }, i * 29.5);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"sort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visual-container\",\n      children: genArrDivs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => generateNewArray(),\n        children: \"New Array\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => bubbleSort(),\n        children: \"Bubble-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Insertion-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Merge-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Quick-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Heap-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XQEGqUk4LLLAfnbfoTMR0dFwJL8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","displayArr","setDispArr","Array","from","length","_","index","Math","floor","random","generateNewArray","genArrDivs","map","num","style","height","backgroundColor","className","fileName","_jsxFileName","lineNumber","columnNumber","bubbleSort","numBars","document","getElementsByClassName","swapArr","n","i","j","setTimeout","temp","sorted","id","children","onClick","_c","$RefreshReg$"],"sources":["/home/angry-dogman/.repos/React-Projects/sorting-visualizer/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  // hook for array of random values\n  const [displayArr, setDispArr] = useState(Array.from({length: 150}, (_,index) => Math.floor(Math.random() * (150 - 5 + 1) + 5)));\n\n  // change array to new array with random values\n  function generateNewArray() {\n    setDispArr(Array.from({length: 150}, (_,index) => Math.floor(Math.random() * (150 - 5 + 1) + 5)));\n  }\n\n  // genare the divs that correspond to the values in the array\n  function genArrDivs() {\n    return displayArr.map((num, index) => \n      <div key={index} style={{height : ''+((num/150)*100)+'%', backgroundColor: \"rgb(243, 220, 15)\"}} className='num-bar'></div>\n    )\n  }\n\n  // implementation of bubble-sort\n  function bubbleSort() {\n      let numBars = document.getElementsByClassName(\"num-bar\");\n      let swapArr = displayArr;\n      let n = swapArr.length\n\n      for (let i = 0; i < n - 1; i++) {\n        for (let j = 0; j < n - i - 1; j++) {\n          setTimeout(() => {\n            numBars[j].style.backgroundColor = \"red\";\n            numBars[j+1].style.backgroundColor = \"red\";\n          }, j * 30);\n          if (swapArr[j] > swapArr[j+1]) {\n            //swap\n            setTimeout(() => {\n              numBars[j].style.height = ''+((swapArr[j+1]/150)*100)+'%'\n              numBars[j+1].style.height = ''+((swapArr[j]/150)*100)+'%'\n            }, (j+1) * 30);\n\n            let temp = swapArr[j+1];\n            swapArr[j+1] = swapArr[j];\n            swapArr[j] = temp;\n          }\n          setTimeout(() => {\n            numBars[j].style.backgroundColor = \"rgb(243, 220, 15)\";\n            numBars[j+1].style.backgroundColor = \"rgb(243, 220, 15)\";\n          }, (j+1) * 30);\n        }\n          // weird issue\n          if (i == n - 2 && !sorted)\n          {\n            setTimeout(() => {\n              let temp = numBars[n-1].style.height;\n              numBars[n-1].style.height = numBars[n-2].style.height;\n              numBars[n-2].style.height = temp;\n            }, (i) * 29.5);\n          }\n      }\n    }\n\n  return (\n    <div id=\"sort-container\">\n      <div id=\"visual-container\">\n        {genArrDivs()}    \n      </div>\n      <div id=\"button-container\">\n        <button onClick={() => generateNewArray()}>New Array</button>\n        <button onClick={() => bubbleSort()}>Bubble-Sort</button>\n        <button>Insertion-Sort</button>\n        <button>Merge-Sort</button>\n        <button>Quick-Sort</button>\n        <button>Heap-Sort</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}