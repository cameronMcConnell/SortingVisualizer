{"ast":null,"code":"var _jsxFileName = \"/home/angry-dogman/.repos/React-Projects/sorting-visualizer/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // used for total number of bars in the display\n  const [totalNumBars, setNumBars] = useState(250);\n\n  // hook for array of random values\n  const [displayArr, setDispArr] = useState(Array.from({\n    length: 250\n  }, (_, index) => Math.floor(Math.random() * (250 - 5 + 1) + 5)));\n\n  // used to change animation speed\n  const [animSpeed, setAnimSpeed] = useState(2);\n\n  // change array to new array with random values\n  function generateNewArray() {\n    setDispArr(Array.from({\n      length: totalNumBars\n    }, (_, index) => Math.floor(Math.random() * (totalNumBars - 5 + 1) + 5)));\n  }\n\n  // genare the divs that correspond to the values in the array\n  function genArrDivs() {\n    return displayArr.map((num, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '' + num / totalNumBars * 100 + '%',\n        backgroundColor: \"rgb(243, 220, 15)\",\n        width: '' + 100 / totalNumBars + '%'\n      },\n      className: \"num-bar\"\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this));\n  }\n  function finalLoop(osc1, osc2) {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    let kft = 0;\n    for (let i = 0; i < numBars.length - 1; i++) {\n      setTimeout(() => {\n        osc1.frequency.value = parseInt(numBars[i].style.height) * 20;\n        osc2.frequency.value = parseInt(numBars[i + 1].style.height) * 20;\n        numBars[i].style.backgroundColor = \"red\";\n        numBars[i + 1].style.backgroundColor = \"red\";\n      }, kft * 4);\n      kft += animSpeed;\n      setTimeout(() => {\n        numBars[i].style.backgroundColor = \"rgb(243, 220, 15)\";\n        numBars[i + 1].style.backgroundColor = \"rgb(243, 220, 15)\";\n      }, (kft + 5) * 4);\n      kft += animSpeed;\n    }\n    setTimeout(() => {\n      osc1.stop();\n      osc2.stop();\n    }, kft * 4);\n  }\n\n  // implementation of bubble-sort\n  function bubbleSort() {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    let swapArr = displayArr;\n    let n = swapArr.length;\n    let animations = [];\n    for (let i = 0; i < n - 1; i++) {\n      for (let j = 0; j < n - i - 1; j++) {\n        animations.push([\"comparison\", j, j + 1]);\n        if (swapArr[j] > swapArr[j + 1]) {\n          animations.push([\"swap\", swapArr[j], swapArr[j + 1], j, j + 1]);\n          let temp = swapArr[j + 1];\n          swapArr[j + 1] = swapArr[j];\n          swapArr[j] = temp;\n        }\n        animations.push([\"re-color\", j, j + 1]);\n      }\n    }\n    const audioContext = new AudioContext();\n    const osc1 = audioContext.createOscillator();\n    const osc2 = audioContext.createOscillator();\n    osc1.connect(audioContext.destination);\n    osc2.connect(audioContext.destination);\n    osc1.start();\n    osc2.start();\n\n    // animation for bubble-sort\n    let kft = 0;\n    for (let x of animations) {\n      if (x[0] === \"comparison\") {\n        setTimeout(() => {\n          osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 20;\n          osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 20;\n          numBars[x[1]].style.backgroundColor = \"red\";\n          numBars[x[2]].style.backgroundColor = \"red\";\n        }, kft * 4);\n        kft += animSpeed;\n      } else if (x[0] === \"swap\") {\n        setTimeout(() => {\n          numBars[x[3]].style.height = '' + x[2] / totalNumBars * 100 + '%';\n          numBars[x[4]].style.height = '' + x[1] / totalNumBars * 100 + '%';\n        }, kft * 4);\n        kft += animSpeed;\n      } else {\n        setTimeout(() => {\n          numBars[x[1]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[2]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, kft * 4);\n        kft += animSpeed;\n      }\n    }\n    setTimeout(() => {\n      finalLoop(osc1, osc2);\n    }, kft * 4);\n    setDispArr(swapArr);\n  }\n\n  // implementaion of insertion-sort\n  function insertionSort() {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    let swapArr = displayArr;\n    const n = swapArr.length;\n    let animations = [];\n    for (let i = 1; i < n; i++) {\n      let key = swapArr[i];\n      let j = i - 1;\n      while (j >= 0 && swapArr[j] > key) {\n        animations.push([\"comparison\", j, i]);\n        animations.push([\"swap\", swapArr[j + 1], swapArr[j], j + 1, j]);\n        swapArr[j + 1] = swapArr[j];\n        j--;\n      }\n      animations.push([\"swap\", swapArr[j + 1], key, j + 1, i]);\n      swapArr[j + 1] = key;\n    }\n    const audioContext = new AudioContext();\n    const osc1 = audioContext.createOscillator();\n    const osc2 = audioContext.createOscillator();\n    osc1.connect(audioContext.destination);\n    osc2.connect(audioContext.destination);\n    osc1.start();\n    osc2.start();\n\n    // sorting animation for insertion-sort\n    let kft = 0;\n    for (let x of animations) {\n      if (x[0] === \"comparison\") {\n        setTimeout(() => {\n          osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 20;\n          osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 20;\n          numBars[x[1]].style.backgroundColor = \"red\";\n          numBars[x[2]].style.backgroundColor = \"red\";\n        }, kft * 4);\n        kft += animSpeed;\n      } else {\n        setTimeout(() => {\n          numBars[x[3]].style.height = '' + x[2] / totalNumBars * 100 + '%';\n          numBars[x[4]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[3]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, kft * 4);\n        kft += animSpeed;\n      }\n    }\n    setTimeout(() => {\n      finalLoop(osc1, osc2);\n    }, kft * 4);\n    setDispArr(swapArr);\n  }\n\n  // implementation of merge-sort\n  function mergeSort(arr, l, r) {\n    if (l >= r) return [];\n    let m = l + parseInt((r - l) / 2);\n    return merge(arr, [...mergeSort(arr, l, m), ...mergeSort(arr, m + 1, r)], l, m, r);\n  }\n  function merge(arr, anim, l, m, r) {\n    let n1 = m - l + 1;\n    let n2 = r - m;\n    let L = new Array(n1);\n    let R = new Array(n2);\n    for (let i = 0; i < n1; i++) L[i] = arr[l + i];\n    for (let j = 0; j < n2; j++) R[j] = arr[m + 1 + j];\n    let i = 0;\n    let j = 0;\n    let k = l;\n    while (i < n1 && j < n2) {\n      anim.push([\"comparison\", l + i, m + j]);\n      if (L[i] <= R[j]) {\n        anim.push([\"change\", k, L[i], l + i, m + j]);\n        arr[k] = L[i];\n        i++;\n      }\n      // R[j] > L[i]\n      else {\n        anim.push([\"change\", k, R[j], l + i, m + j]);\n        arr[k] = R[j];\n        j++;\n      }\n      k++;\n    }\n    while (i < n1) {\n      anim.push([\"change\", k, L[i], l + i, m + j]);\n      arr[k] = L[i];\n      i++;\n      k++;\n    }\n    while (j < n2) {\n      anim.push([\"change\", k, R[j], l + i, m + j]);\n      arr[k] = R[j];\n      j++;\n      k++;\n    }\n    return anim;\n  }\n  function animateMerge(arr, animations) {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    const audioContext = new AudioContext();\n    const gainNode = new GainNode(audioContext);\n    const osc1 = audioContext.createOscillator();\n    const osc2 = audioContext.createOscillator();\n    gainNode.gain.value = 0.02;\n    osc1.connect(gainNode).connect(audioContext.destination);\n    osc2.connect(gainNode).connect(audioContext.destination);\n    osc1.start();\n    osc2.start();\n    let kft = 0;\n    for (let x of animations) {\n      if (x[0] === \"comparison\") {\n        setTimeout(() => {\n          osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 30;\n          osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 30;\n          numBars[x[1]].style.backgroundColor = \"red\";\n          numBars[x[2]].style.backgroundColor = \"red\";\n        }, kft * 4);\n        kft += animSpeed;\n      } else {\n        setTimeout(() => {\n          numBars[x[1]].style.height = '' + x[2] / totalNumBars * 100 + '%';\n          numBars[x[4]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[3]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, kft * 4);\n        kft += animSpeed;\n      }\n    }\n    setTimeout(() => {\n      finalLoop(osc1, osc2);\n    }, kft * 4);\n    setDispArr(arr);\n  }\n\n  // quick-sort implementation\n  function quickSort(arr, anim, l, r) {\n    if (l < r) {\n      let [pi, newAnim] = partition(arr, anim, l, r);\n      return quickSort(arr, quickSort(arr, newAnim, l, pi - 1), pi + 1, r);\n    }\n    return anim;\n  }\n  function partition(arr, anim, l, r) {\n    let pivot = arr[r];\n    let i = l - 1;\n    for (let j = l; j <= r - 1; j++) {\n      anim.push([\"comparison\", j, r]);\n      if (arr[j] < pivot) {\n        i++;\n        anim.push([\"swap\", i, j, arr[i], arr[j]]);\n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n      anim.push([\"color-fix\", j, r]);\n    }\n    anim.push([\"swap\", i + 1, r, arr[i + 1], arr[r]]);\n    let temp = arr[i + 1];\n    arr[i + 1] = arr[r];\n    arr[r] = temp;\n    return [i + 1, anim];\n  }\n  function animateQuick(arr, animations) {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    const audioContext = new AudioContext();\n    const osc1 = audioContext.createOscillator();\n    const osc2 = audioContext.createOscillator();\n    osc1.connect(audioContext.destination);\n    osc2.connect(audioContext.destination);\n    osc1.start();\n    osc2.start();\n    let kft = 0;\n    for (let x of animations) {\n      if (x[0] === \"comparison\") {\n        setTimeout(() => {\n          osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 20;\n          osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 20;\n          numBars[x[1]].style.backgroundColor = \"red\";\n          numBars[x[2]].style.backgroundColor = \"red\";\n        }, kft * 4);\n        kft += animSpeed;\n      } else if (x[0] === \"color-fix\") {\n        setTimeout(() => {\n          numBars[x[1]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[2]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, kft * 4);\n      } else {\n        setTimeout(() => {\n          numBars[x[1]].style.height = '' + x[4] / totalNumBars * 100 + '%';\n          numBars[x[2]].style.height = '' + x[3] / totalNumBars * 100 + '%';\n          numBars[x[1]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[2]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, kft * 4);\n        kft += animSpeed;\n      }\n    }\n    setTimeout(() => {\n      finalLoop(osc1, osc2);\n    }, kft * 4);\n    setDispArr(arr);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"sort-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visual-container\",\n      children: genArrDivs()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => generateNewArray(),\n        children: \" New Array \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => bubbleSort(),\n        children: \" Bubble-Sort \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => insertionSort(),\n        children: \" Insertion-Sort \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          let swapArr = displayArr;\n          let animations = mergeSort(swapArr, 0, displayArr.length - 1);\n          animateMerge(swapArr, animations);\n        },\n        children: \" Merge-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          let swapArr = displayArr;\n          let animations = quickSort(swapArr, [], 0, swapArr.length - 1);\n          animateQuick(swapArr, animations);\n        },\n        children: \" Quick-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Heap-Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"# of Array Elements: \", totalNumBars]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"100\",\n          max: \"1000\",\n          step: \"1\",\n          value: totalNumBars,\n          onChange: e => {\n            setNumBars(Number(e.target.value));\n            generateNewArray();\n          },\n          onClick: e => {\n            setNumBars(Number(e.target.value));\n            generateNewArray();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Animation Speed: \", animSpeed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: \"0.5\",\n          max: \"8\",\n          step: \"0.1\",\n          value: animSpeed,\n          onChange: e => setAnimSpeed(Number(e.target.value)),\n          onClick: e => setAnimSpeed(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 363,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bYDtxZyV43IHweSOx7imC3f5w4s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","totalNumBars","setNumBars","displayArr","setDispArr","Array","from","length","_","index","Math","floor","random","animSpeed","setAnimSpeed","generateNewArray","genArrDivs","map","num","style","height","backgroundColor","width","className","fileName","_jsxFileName","lineNumber","columnNumber","finalLoop","osc1","osc2","numBars","document","getElementsByClassName","kft","i","setTimeout","frequency","value","parseInt","stop","bubbleSort","swapArr","n","animations","j","push","temp","audioContext","AudioContext","createOscillator","connect","destination","start","x","insertionSort","key","mergeSort","arr","l","r","m","merge","anim","n1","n2","L","R","k","animateMerge","gainNode","GainNode","gain","quickSort","pi","newAnim","partition","pivot","animateQuick","id","children","onClick","type","min","max","step","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/home/angry-dogman/.repos/React-Projects/sorting-visualizer/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nfunction App() {\n\n  // used for total number of bars in the display\n  const [totalNumBars, setNumBars] = useState(250);\n  \n  // hook for array of random values\n  const [displayArr, setDispArr] = useState(Array.from({length: 250}, (_,index) => Math.floor(Math.random() * (250 - 5 + 1) + 5)));\n\n  // used to change animation speed\n  const [animSpeed, setAnimSpeed] = useState(2);\n\n  // change array to new array with random values\n  function generateNewArray() {\n    setDispArr(Array.from({length: totalNumBars}, (_,index) => Math.floor(Math.random() * (totalNumBars - 5 + 1) + 5)));\n  }\n\n  // genare the divs that correspond to the values in the array\n  function genArrDivs() {\n    return displayArr.map((num, index) => \n      <div key={index} style={{height : ''+((num/totalNumBars)*100)+'%', backgroundColor: \"rgb(243, 220, 15)\", width: ''+(100/totalNumBars)+'%'}} \n      className='num-bar'></div>\n    )\n  }\n\n  function finalLoop(osc1, osc2) {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    \n    let kft = 0;\n    for (let i = 0; i < numBars.length-1; i++) {\n      setTimeout(() => {\n        osc1.frequency.value = parseInt(numBars[i].style.height) * 20;\n        osc2.frequency.value = parseInt(numBars[i+1].style.height) * 20;\n        numBars[i].style.backgroundColor = \"red\";\n        numBars[i+1].style.backgroundColor = \"red\";\n      }, kft * 4);\n      kft += animSpeed;\n      setTimeout(() => {\n        numBars[i].style.backgroundColor = \"rgb(243, 220, 15)\";\n        numBars[i+1].style.backgroundColor = \"rgb(243, 220, 15)\";\n      }, (kft + 5) * 4);\n      kft += animSpeed;\n    }\n    setTimeout(() => {\n      osc1.stop();\n      osc2.stop();\n    }, kft * 4)\n  }\n\n  // implementation of bubble-sort\n  function bubbleSort() {\n      let numBars = document.getElementsByClassName(\"num-bar\");\n      let swapArr = displayArr;\n      let n = swapArr.length;\n      let animations = [];\n\n      for (let i = 0; i < n - 1; i++) {\n        for (let j = 0; j < n - i - 1; j++) {\n          \n          animations.push([\"comparison\", j, j+1]);\n          if (swapArr[j] > swapArr[j+1]) {\n\n            animations.push([\"swap\", swapArr[j], swapArr[j+1], j, j+1]);\n\n            let temp = swapArr[j+1];\n            swapArr[j+1] = swapArr[j];\n            swapArr[j] = temp;\n          }\n          animations.push([\"re-color\", j, j+1])\n        }\n      }\n\n      const audioContext = new AudioContext();\n\n      const osc1 = audioContext.createOscillator();\n      const osc2 = audioContext.createOscillator();\n  \n      osc1.connect(audioContext.destination);\n      osc2.connect(audioContext.destination);\n  \n      osc1.start();\n      osc2.start();\n\n      // animation for bubble-sort\n      let kft = 0;\n      for (let x of animations) {\n        if (x[0] === \"comparison\") {\n          setTimeout(() => {\n            osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 20;\n            osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 20;\n            numBars[x[1]].style.backgroundColor = \"red\";\n            numBars[x[2]].style.backgroundColor = \"red\";\n          }, (kft) * 4);\n          kft += animSpeed;\n        } \n        else if (x[0] === \"swap\") {\n          setTimeout(() => {\n            numBars[x[3]].style.height = ''+((x[2]/totalNumBars)*100)+'%';\n            numBars[x[4]].style.height = ''+((x[1]/totalNumBars)*100)+'%';\n          }, (kft) * 4);\n          kft += animSpeed;\n        }\n        else {\n          setTimeout(() => {\n            numBars[x[1]].style.backgroundColor = \"rgb(243, 220, 15)\";\n            numBars[x[2]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          }, (kft) * 4);\n          kft += animSpeed;\n        }\n      }\n      setTimeout(() => {\n        finalLoop(osc1, osc2)\n      }, kft * 4) \n      setDispArr(swapArr);\n    }\n\n  // implementaion of insertion-sort\n  function insertionSort() {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    let swapArr = displayArr;\n    const n = swapArr.length;\n    let animations = [];\n\n    for (let i = 1; i < n; i++) {\n      let key = swapArr[i];\n      let j = i - 1;\n\n      while (j >= 0 && swapArr[j] > key) {\n        \n        animations.push([\"comparison\", j, i]);\n        animations.push([\"swap\", swapArr[j+1], swapArr[j], j+1, j]);\n\n        swapArr[j+1] = swapArr[j];\n        j--;  \n      }\n      animations.push([\"swap\", swapArr[j+1], key, j+1, i]);\n      swapArr[j+1] = key;\n    }\n\n    const audioContext = new AudioContext();\n\n    const osc1 = audioContext.createOscillator();\n    const osc2 = audioContext.createOscillator();\n\n    osc1.connect(audioContext.destination);\n    osc2.connect(audioContext.destination);\n\n    osc1.start();\n    osc2.start();\n    \n    // sorting animation for insertion-sort\n    let kft = 0;\n    for (let x of animations) {\n      if (x[0] === \"comparison\") {\n        setTimeout(() => {\n          osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 20;\n          osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 20;\n          numBars[x[1]].style.backgroundColor = \"red\";\n          numBars[x[2]].style.backgroundColor = \"red\";\n        }, (kft) * 4);\n        kft += animSpeed;\n      }\n      else {\n        setTimeout(() => {\n          numBars[x[3]].style.height = ''+((x[2]/totalNumBars)*100)+'%'\n          numBars[x[4]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[3]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, (kft) * 4);\n        kft += animSpeed;\n      }\n    }\n    setTimeout(() => {\n      finalLoop(osc1, osc2);\n    }, kft * 4) \n    setDispArr(swapArr);\n  }\n\n  // implementation of merge-sort\n  function mergeSort(arr, l, r) {\n    if (l >= r) \n      return [];\n    \n    let m = l + parseInt((r-l)/2);\n    return merge(arr, [...mergeSort(arr,l,m), ...mergeSort(arr,m+1,r)], l, m, r);\n  }\n\n  function merge(arr, anim, l, m, r) {\n    let n1 = m - l + 1;\n    let n2 = r - m;\n\n    let L = new Array(n1);\n    let R = new Array(n2);\n\n    for (let i = 0; i < n1; i++)\n        L[i] = arr[l + i];\n    for (let j = 0; j < n2; j++)\n        R[j] = arr[m + 1 + j];\n\n    let i = 0;\n    let j = 0;\n    let k = l;\n\n    while (i < n1 && j < n2) {\n      anim.push([\"comparison\", l+i, m+j]);\n      if (L[i] <= R[j]) {\n        anim.push([\"change\", k, L[i], l+i, m+j]);\n        arr[k] = L[i];\n        i++;\n      }\n      // R[j] > L[i]\n      else {\n        anim.push([\"change\", k, R[j], l+i, m+j]);\n        arr[k] = R[j];\n        j++;\n      }\n      k++;\n    }\n\n    while (i < n1) {\n      anim.push([\"change\", k, L[i], l+i, m+j]);\n      arr[k] = L[i];\n      i++;\n      k++;\n    }\n\n    while (j < n2) {\n      anim.push([\"change\", k, R[j], l+i, m+j]);\n      arr[k] = R[j];\n      j++;\n      k++;\n    }\n\n    return anim\n  }\n\n  function animateMerge(arr, animations) {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    const audioContext = new AudioContext();\n    const gainNode = new GainNode(audioContext);\n\n    const osc1 = audioContext.createOscillator();\n    const osc2 = audioContext.createOscillator();\n  \n    gainNode.gain.value = 0.02;\n\n    osc1.connect(gainNode).connect(audioContext.destination);\n    osc2.connect(gainNode).connect(audioContext.destination);\n    \n\n    osc1.start();\n    osc2.start();\n\n    let kft = 0;\n    for (let x of animations) {\n      if (x[0] === \"comparison\") {\n        setTimeout(() => {\n          osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 30;\n          osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 30;\n          numBars[x[1]].style.backgroundColor = \"red\";\n          numBars[x[2]].style.backgroundColor = \"red\";\n        },(kft) * 4);\n        kft += animSpeed;\n      }\n      else {\n        setTimeout(() => {\n          numBars[x[1]].style.height = ''+((x[2]/totalNumBars)*100)+'%'\n          numBars[x[4]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[3]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, (kft) * 4);\n        kft += animSpeed;\n      }\n    }\n    setTimeout(() => {\n      finalLoop(osc1, osc2);\n    }, kft * 4)\n    setDispArr(arr);\n  }\n\n  // quick-sort implementation\n  function quickSort(arr, anim, l, r) {\n    if (l < r) {\n      let [pi, newAnim] = partition(arr, anim, l, r);\n\n      return quickSort(arr, quickSort(arr, newAnim, l, pi - 1), pi + 1, r);\n    }\n    \n    return anim;\n  }\n\n  function partition(arr, anim, l, r) {\n    let pivot = arr[r];\n\n    let i = l - 1;\n\n    for (let j = l; j <= r - 1; j++) {\n      anim.push([\"comparison\", j, r]);\n      if (arr[j] < pivot) {\n        i++;\n        anim.push([\"swap\", i, j, arr[i], arr[j]]);\n        let temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n      }\n      anim.push([\"color-fix\", j, r]);\n    }\n    anim.push([\"swap\", i+1, r, arr[i+1], arr[r]]);\n    let temp = arr[i+1];\n    arr[i+1] = arr[r];\n    arr[r] = temp;\n\n    return [i+1, anim]\n  }\n\n  function animateQuick(arr, animations) {\n    let numBars = document.getElementsByClassName(\"num-bar\");\n    const audioContext = new AudioContext();\n\n    const osc1 = audioContext.createOscillator();\n    const osc2 = audioContext.createOscillator();\n\n    osc1.connect(audioContext.destination);\n    osc2.connect(audioContext.destination);\n\n    osc1.start();\n    osc2.start();\n\n    let kft = 0;\n    for (let x of animations) {\n      if (x[0] === \"comparison\") {\n        setTimeout(() => {\n          osc1.frequency.value = parseInt(numBars[x[1]].style.height) * 20;\n          osc2.frequency.value = parseInt(numBars[x[2]].style.height) * 20;\n          numBars[x[1]].style.backgroundColor = \"red\";\n          numBars[x[2]].style.backgroundColor = \"red\";\n        },(kft) * 4);\n        kft += animSpeed;\n      }\n      else if (x[0] === \"color-fix\") {\n        setTimeout(() => {\n          numBars[x[1]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[2]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        },(kft) * 4);\n      }\n      else {\n        setTimeout(() => {\n          numBars[x[1]].style.height = ''+((x[4]/totalNumBars)*100)+'%';\n          numBars[x[2]].style.height = ''+((x[3]/totalNumBars)*100)+'%';\n          numBars[x[1]].style.backgroundColor = \"rgb(243, 220, 15)\";\n          numBars[x[2]].style.backgroundColor = \"rgb(243, 220, 15)\";\n        }, (kft) * 4);\n        kft += animSpeed;\n      }\n    }\n    setTimeout(() => {\n      finalLoop(osc1, osc2);\n    }, kft * 4)\n    setDispArr(arr);\n  }\n\n  return (\n    <div id=\"sort-container\">\n      <div id=\"visual-container\">\n        {genArrDivs()}    \n      </div>\n      <div id=\"button-container\">\n        \n        <button onClick={() => generateNewArray()}> New Array </button>\n        <button onClick={() => bubbleSort()}> Bubble-Sort </button>\n        <button onClick={() => insertionSort()}> Insertion-Sort </button>\n        \n        <button onClick={() => { let swapArr = displayArr; \n          let animations = mergeSort(swapArr, 0, displayArr.length-1); \n          animateMerge(swapArr, animations);}}> Merge-Sort\n        </button>\n        \n        <button onClick={() => {let swapArr = displayArr; \n          let animations = quickSort(swapArr, [], 0, swapArr.length-1);\n          animateQuick(swapArr, animations);}}> Quick-Sort\n        </button>\n        \n        <button>Heap-Sort</button>\n        \n        <div className=\"input-container\">\n          <label># of Array Elements: {totalNumBars}</label>\n          <input type=\"range\" min=\"100\" max=\"1000\" step=\"1\" value={totalNumBars} \n          onChange={e => {setNumBars(Number(e.target.value)); generateNewArray();}}\n          onClick={e => {setNumBars(Number(e.target.value)); generateNewArray();}}/>\n        </div>\n        <div className=\"input-container\">\n          <label>Animation Speed: {animSpeed}</label>\n          <input type=\"range\" min=\"0.5\" max=\"8\" step=\"0.1\" value={animSpeed} \n          onChange={e => setAnimSpeed(Number(e.target.value))} \n          onClick={e => setAnimSpeed(Number(e.target.value))}/>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACA,MAAM,CAACC,YAAY,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC;;EAEhD;EACA,MAAM,CAACO,UAAU,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAACC,IAAI,CAAC;IAACC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAACC,KAAK,KAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEhI;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;;EAE7C;EACA,SAASmB,gBAAgBA,CAAA,EAAG;IAC1BX,UAAU,CAACC,KAAK,CAACC,IAAI,CAAC;MAACC,MAAM,EAAEN;IAAY,CAAC,EAAE,CAACO,CAAC,EAACC,KAAK,KAAKC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,IAAIX,YAAY,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrH;;EAEA;EACA,SAASe,UAAUA,CAAA,EAAG;IACpB,OAAOb,UAAU,CAACc,GAAG,CAAC,CAACC,GAAG,EAAET,KAAK,kBAC/BX,OAAA;MAAiBqB,KAAK,EAAE;QAACC,MAAM,EAAG,EAAE,GAAGF,GAAG,GAACjB,YAAY,GAAE,GAAI,GAAC,GAAG;QAAEoB,eAAe,EAAE,mBAAmB;QAAEC,KAAK,EAAE,EAAE,GAAE,GAAG,GAACrB,YAAa,GAAC;MAAG,CAAE;MAC3IsB,SAAS,EAAC;IAAS,GADTd,KAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACW,CAC3B;EACH;EAEA,SAASC,SAASA,CAACC,IAAI,EAAEC,IAAI,EAAE;IAC7B,IAAIC,OAAO,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,SAAS,CAAC;IAExD,IAAIC,GAAG,GAAG,CAAC;IACX,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,OAAO,CAACxB,MAAM,GAAC,CAAC,EAAE4B,CAAC,EAAE,EAAE;MACzCC,UAAU,CAAC,MAAM;QACfP,IAAI,CAACQ,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACI,CAAC,CAAC,CAAChB,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;QAC7DU,IAAI,CAACO,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACI,CAAC,GAAC,CAAC,CAAC,CAAChB,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;QAC/DW,OAAO,CAACI,CAAC,CAAC,CAAChB,KAAK,CAACE,eAAe,GAAG,KAAK;QACxCU,OAAO,CAACI,CAAC,GAAC,CAAC,CAAC,CAAChB,KAAK,CAACE,eAAe,GAAG,KAAK;MAC5C,CAAC,EAAEa,GAAG,GAAG,CAAC,CAAC;MACXA,GAAG,IAAIrB,SAAS;MAChBuB,UAAU,CAAC,MAAM;QACfL,OAAO,CAACI,CAAC,CAAC,CAAChB,KAAK,CAACE,eAAe,GAAG,mBAAmB;QACtDU,OAAO,CAACI,CAAC,GAAC,CAAC,CAAC,CAAChB,KAAK,CAACE,eAAe,GAAG,mBAAmB;MAC1D,CAAC,EAAE,CAACa,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC;MACjBA,GAAG,IAAIrB,SAAS;IAClB;IACAuB,UAAU,CAAC,MAAM;MACfP,IAAI,CAACW,IAAI,EAAE;MACXV,IAAI,CAACU,IAAI,EAAE;IACb,CAAC,EAAEN,GAAG,GAAG,CAAC,CAAC;EACb;;EAEA;EACA,SAASO,UAAUA,CAAA,EAAG;IAClB,IAAIV,OAAO,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,SAAS,CAAC;IACxD,IAAIS,OAAO,GAAGvC,UAAU;IACxB,IAAIwC,CAAC,GAAGD,OAAO,CAACnC,MAAM;IACtB,IAAIqC,UAAU,GAAG,EAAE;IAEnB,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,CAAC,GAAG,CAAC,EAAER,CAAC,EAAE,EAAE;MAC9B,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,CAAC,GAAGR,CAAC,GAAG,CAAC,EAAEU,CAAC,EAAE,EAAE;QAElCD,UAAU,CAACE,IAAI,CAAC,CAAC,YAAY,EAAED,CAAC,EAAEA,CAAC,GAAC,CAAC,CAAC,CAAC;QACvC,IAAIH,OAAO,CAACG,CAAC,CAAC,GAAGH,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC,EAAE;UAE7BD,UAAU,CAACE,IAAI,CAAC,CAAC,MAAM,EAAEJ,OAAO,CAACG,CAAC,CAAC,EAAEH,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC,EAAEA,CAAC,EAAEA,CAAC,GAAC,CAAC,CAAC,CAAC;UAE3D,IAAIE,IAAI,GAAGL,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC;UACvBH,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC,GAAGH,OAAO,CAACG,CAAC,CAAC;UACzBH,OAAO,CAACG,CAAC,CAAC,GAAGE,IAAI;QACnB;QACAH,UAAU,CAACE,IAAI,CAAC,CAAC,UAAU,EAAED,CAAC,EAAEA,CAAC,GAAC,CAAC,CAAC,CAAC;MACvC;IACF;IAEA,MAAMG,YAAY,GAAG,IAAIC,YAAY,EAAE;IAEvC,MAAMpB,IAAI,GAAGmB,YAAY,CAACE,gBAAgB,EAAE;IAC5C,MAAMpB,IAAI,GAAGkB,YAAY,CAACE,gBAAgB,EAAE;IAE5CrB,IAAI,CAACsB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IACtCtB,IAAI,CAACqB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IAEtCvB,IAAI,CAACwB,KAAK,EAAE;IACZvB,IAAI,CAACuB,KAAK,EAAE;;IAEZ;IACA,IAAInB,GAAG,GAAG,CAAC;IACX,KAAK,IAAIoB,CAAC,IAAIV,UAAU,EAAE;MACxB,IAAIU,CAAC,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;QACzBlB,UAAU,CAAC,MAAM;UACfP,IAAI,CAACQ,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEU,IAAI,CAACO,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEW,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;UAC3CU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;QAC7C,CAAC,EAAGa,GAAG,GAAI,CAAC,CAAC;QACbA,GAAG,IAAIrB,SAAS;MAClB,CAAC,MACI,IAAIyC,CAAC,CAAC,CAAC,CAAC,KAAK,MAAM,EAAE;QACxBlB,UAAU,CAAC,MAAM;UACfL,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,GAAG,EAAE,GAAGkC,CAAC,CAAC,CAAC,CAAC,GAACrD,YAAY,GAAE,GAAI,GAAC,GAAG;UAC7D8B,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,GAAG,EAAE,GAAGkC,CAAC,CAAC,CAAC,CAAC,GAACrD,YAAY,GAAE,GAAI,GAAC,GAAG;QAC/D,CAAC,EAAGiC,GAAG,GAAI,CAAC,CAAC;QACbA,GAAG,IAAIrB,SAAS;MAClB,CAAC,MACI;QACHuB,UAAU,CAAC,MAAM;UACfL,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;UACzDU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;QAC3D,CAAC,EAAGa,GAAG,GAAI,CAAC,CAAC;QACbA,GAAG,IAAIrB,SAAS;MAClB;IACF;IACAuB,UAAU,CAAC,MAAM;MACfR,SAAS,CAACC,IAAI,EAAEC,IAAI,CAAC;IACvB,CAAC,EAAEI,GAAG,GAAG,CAAC,CAAC;IACX9B,UAAU,CAACsC,OAAO,CAAC;EACrB;;EAEF;EACA,SAASa,aAAaA,CAAA,EAAG;IACvB,IAAIxB,OAAO,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,SAAS,CAAC;IACxD,IAAIS,OAAO,GAAGvC,UAAU;IACxB,MAAMwC,CAAC,GAAGD,OAAO,CAACnC,MAAM;IACxB,IAAIqC,UAAU,GAAG,EAAE;IAEnB,KAAK,IAAIT,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGQ,CAAC,EAAER,CAAC,EAAE,EAAE;MAC1B,IAAIqB,GAAG,GAAGd,OAAO,CAACP,CAAC,CAAC;MACpB,IAAIU,CAAC,GAAGV,CAAC,GAAG,CAAC;MAEb,OAAOU,CAAC,IAAI,CAAC,IAAIH,OAAO,CAACG,CAAC,CAAC,GAAGW,GAAG,EAAE;QAEjCZ,UAAU,CAACE,IAAI,CAAC,CAAC,YAAY,EAAED,CAAC,EAAEV,CAAC,CAAC,CAAC;QACrCS,UAAU,CAACE,IAAI,CAAC,CAAC,MAAM,EAAEJ,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC,EAAEH,OAAO,CAACG,CAAC,CAAC,EAAEA,CAAC,GAAC,CAAC,EAAEA,CAAC,CAAC,CAAC;QAE3DH,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC,GAAGH,OAAO,CAACG,CAAC,CAAC;QACzBA,CAAC,EAAE;MACL;MACAD,UAAU,CAACE,IAAI,CAAC,CAAC,MAAM,EAAEJ,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC,EAAEW,GAAG,EAAEX,CAAC,GAAC,CAAC,EAAEV,CAAC,CAAC,CAAC;MACpDO,OAAO,CAACG,CAAC,GAAC,CAAC,CAAC,GAAGW,GAAG;IACpB;IAEA,MAAMR,YAAY,GAAG,IAAIC,YAAY,EAAE;IAEvC,MAAMpB,IAAI,GAAGmB,YAAY,CAACE,gBAAgB,EAAE;IAC5C,MAAMpB,IAAI,GAAGkB,YAAY,CAACE,gBAAgB,EAAE;IAE5CrB,IAAI,CAACsB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IACtCtB,IAAI,CAACqB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IAEtCvB,IAAI,CAACwB,KAAK,EAAE;IACZvB,IAAI,CAACuB,KAAK,EAAE;;IAEZ;IACA,IAAInB,GAAG,GAAG,CAAC;IACX,KAAK,IAAIoB,CAAC,IAAIV,UAAU,EAAE;MACxB,IAAIU,CAAC,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;QACzBlB,UAAU,CAAC,MAAM;UACfP,IAAI,CAACQ,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEU,IAAI,CAACO,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEW,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;UAC3CU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;QAC7C,CAAC,EAAGa,GAAG,GAAI,CAAC,CAAC;QACbA,GAAG,IAAIrB,SAAS;MAClB,CAAC,MACI;QACHuB,UAAU,CAAC,MAAM;UACfL,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,GAAG,EAAE,GAAGkC,CAAC,CAAC,CAAC,CAAC,GAACrD,YAAY,GAAE,GAAI,GAAC,GAAG;UAC7D8B,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;UACzDU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;QAC3D,CAAC,EAAGa,GAAG,GAAI,CAAC,CAAC;QACbA,GAAG,IAAIrB,SAAS;MAClB;IACF;IACAuB,UAAU,CAAC,MAAM;MACfR,SAAS,CAACC,IAAI,EAAEC,IAAI,CAAC;IACvB,CAAC,EAAEI,GAAG,GAAG,CAAC,CAAC;IACX9B,UAAU,CAACsC,OAAO,CAAC;EACrB;;EAEA;EACA,SAASe,SAASA,CAACC,GAAG,EAAEC,CAAC,EAAEC,CAAC,EAAE;IAC5B,IAAID,CAAC,IAAIC,CAAC,EACR,OAAO,EAAE;IAEX,IAAIC,CAAC,GAAGF,CAAC,GAAGpB,QAAQ,CAAC,CAACqB,CAAC,GAACD,CAAC,IAAE,CAAC,CAAC;IAC7B,OAAOG,KAAK,CAACJ,GAAG,EAAE,CAAC,GAAGD,SAAS,CAACC,GAAG,EAACC,CAAC,EAACE,CAAC,CAAC,EAAE,GAAGJ,SAAS,CAACC,GAAG,EAACG,CAAC,GAAC,CAAC,EAACD,CAAC,CAAC,CAAC,EAAED,CAAC,EAAEE,CAAC,EAAED,CAAC,CAAC;EAC9E;EAEA,SAASE,KAAKA,CAACJ,GAAG,EAAEK,IAAI,EAAEJ,CAAC,EAAEE,CAAC,EAAED,CAAC,EAAE;IACjC,IAAII,EAAE,GAAGH,CAAC,GAAGF,CAAC,GAAG,CAAC;IAClB,IAAIM,EAAE,GAAGL,CAAC,GAAGC,CAAC;IAEd,IAAIK,CAAC,GAAG,IAAI7D,KAAK,CAAC2D,EAAE,CAAC;IACrB,IAAIG,CAAC,GAAG,IAAI9D,KAAK,CAAC4D,EAAE,CAAC;IAErB,KAAK,IAAI9B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG6B,EAAE,EAAE7B,CAAC,EAAE,EACvB+B,CAAC,CAAC/B,CAAC,CAAC,GAAGuB,GAAG,CAACC,CAAC,GAAGxB,CAAC,CAAC;IACrB,KAAK,IAAIU,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGoB,EAAE,EAAEpB,CAAC,EAAE,EACvBsB,CAAC,CAACtB,CAAC,CAAC,GAAGa,GAAG,CAACG,CAAC,GAAG,CAAC,GAAGhB,CAAC,CAAC;IAEzB,IAAIV,CAAC,GAAG,CAAC;IACT,IAAIU,CAAC,GAAG,CAAC;IACT,IAAIuB,CAAC,GAAGT,CAAC;IAET,OAAOxB,CAAC,GAAG6B,EAAE,IAAInB,CAAC,GAAGoB,EAAE,EAAE;MACvBF,IAAI,CAACjB,IAAI,CAAC,CAAC,YAAY,EAAEa,CAAC,GAACxB,CAAC,EAAE0B,CAAC,GAAChB,CAAC,CAAC,CAAC;MACnC,IAAIqB,CAAC,CAAC/B,CAAC,CAAC,IAAIgC,CAAC,CAACtB,CAAC,CAAC,EAAE;QAChBkB,IAAI,CAACjB,IAAI,CAAC,CAAC,QAAQ,EAAEsB,CAAC,EAAEF,CAAC,CAAC/B,CAAC,CAAC,EAAEwB,CAAC,GAACxB,CAAC,EAAE0B,CAAC,GAAChB,CAAC,CAAC,CAAC;QACxCa,GAAG,CAACU,CAAC,CAAC,GAAGF,CAAC,CAAC/B,CAAC,CAAC;QACbA,CAAC,EAAE;MACL;MACA;MAAA,KACK;QACH4B,IAAI,CAACjB,IAAI,CAAC,CAAC,QAAQ,EAAEsB,CAAC,EAAED,CAAC,CAACtB,CAAC,CAAC,EAAEc,CAAC,GAACxB,CAAC,EAAE0B,CAAC,GAAChB,CAAC,CAAC,CAAC;QACxCa,GAAG,CAACU,CAAC,CAAC,GAAGD,CAAC,CAACtB,CAAC,CAAC;QACbA,CAAC,EAAE;MACL;MACAuB,CAAC,EAAE;IACL;IAEA,OAAOjC,CAAC,GAAG6B,EAAE,EAAE;MACbD,IAAI,CAACjB,IAAI,CAAC,CAAC,QAAQ,EAAEsB,CAAC,EAAEF,CAAC,CAAC/B,CAAC,CAAC,EAAEwB,CAAC,GAACxB,CAAC,EAAE0B,CAAC,GAAChB,CAAC,CAAC,CAAC;MACxCa,GAAG,CAACU,CAAC,CAAC,GAAGF,CAAC,CAAC/B,CAAC,CAAC;MACbA,CAAC,EAAE;MACHiC,CAAC,EAAE;IACL;IAEA,OAAOvB,CAAC,GAAGoB,EAAE,EAAE;MACbF,IAAI,CAACjB,IAAI,CAAC,CAAC,QAAQ,EAAEsB,CAAC,EAAED,CAAC,CAACtB,CAAC,CAAC,EAAEc,CAAC,GAACxB,CAAC,EAAE0B,CAAC,GAAChB,CAAC,CAAC,CAAC;MACxCa,GAAG,CAACU,CAAC,CAAC,GAAGD,CAAC,CAACtB,CAAC,CAAC;MACbA,CAAC,EAAE;MACHuB,CAAC,EAAE;IACL;IAEA,OAAOL,IAAI;EACb;EAEA,SAASM,YAAYA,CAACX,GAAG,EAAEd,UAAU,EAAE;IACrC,IAAIb,OAAO,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,SAAS,CAAC;IACxD,MAAMe,YAAY,GAAG,IAAIC,YAAY,EAAE;IACvC,MAAMqB,QAAQ,GAAG,IAAIC,QAAQ,CAACvB,YAAY,CAAC;IAE3C,MAAMnB,IAAI,GAAGmB,YAAY,CAACE,gBAAgB,EAAE;IAC5C,MAAMpB,IAAI,GAAGkB,YAAY,CAACE,gBAAgB,EAAE;IAE5CoB,QAAQ,CAACE,IAAI,CAAClC,KAAK,GAAG,IAAI;IAE1BT,IAAI,CAACsB,OAAO,CAACmB,QAAQ,CAAC,CAACnB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IACxDtB,IAAI,CAACqB,OAAO,CAACmB,QAAQ,CAAC,CAACnB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IAGxDvB,IAAI,CAACwB,KAAK,EAAE;IACZvB,IAAI,CAACuB,KAAK,EAAE;IAEZ,IAAInB,GAAG,GAAG,CAAC;IACX,KAAK,IAAIoB,CAAC,IAAIV,UAAU,EAAE;MACxB,IAAIU,CAAC,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;QACzBlB,UAAU,CAAC,MAAM;UACfP,IAAI,CAACQ,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEU,IAAI,CAACO,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEW,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;UAC3CU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;QAC7C,CAAC,EAAEa,GAAG,GAAI,CAAC,CAAC;QACZA,GAAG,IAAIrB,SAAS;MAClB,CAAC,MACI;QACHuB,UAAU,CAAC,MAAM;UACfL,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,GAAG,EAAE,GAAGkC,CAAC,CAAC,CAAC,CAAC,GAACrD,YAAY,GAAE,GAAI,GAAC,GAAG;UAC7D8B,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;UACzDU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;QAC3D,CAAC,EAAGa,GAAG,GAAI,CAAC,CAAC;QACbA,GAAG,IAAIrB,SAAS;MAClB;IACF;IACAuB,UAAU,CAAC,MAAM;MACfR,SAAS,CAACC,IAAI,EAAEC,IAAI,CAAC;IACvB,CAAC,EAAEI,GAAG,GAAG,CAAC,CAAC;IACX9B,UAAU,CAACsD,GAAG,CAAC;EACjB;;EAEA;EACA,SAASe,SAASA,CAACf,GAAG,EAAEK,IAAI,EAAEJ,CAAC,EAAEC,CAAC,EAAE;IAClC,IAAID,CAAC,GAAGC,CAAC,EAAE;MACT,IAAI,CAACc,EAAE,EAAEC,OAAO,CAAC,GAAGC,SAAS,CAAClB,GAAG,EAAEK,IAAI,EAAEJ,CAAC,EAAEC,CAAC,CAAC;MAE9C,OAAOa,SAAS,CAACf,GAAG,EAAEe,SAAS,CAACf,GAAG,EAAEiB,OAAO,EAAEhB,CAAC,EAAEe,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,GAAG,CAAC,EAAEd,CAAC,CAAC;IACtE;IAEA,OAAOG,IAAI;EACb;EAEA,SAASa,SAASA,CAAClB,GAAG,EAAEK,IAAI,EAAEJ,CAAC,EAAEC,CAAC,EAAE;IAClC,IAAIiB,KAAK,GAAGnB,GAAG,CAACE,CAAC,CAAC;IAElB,IAAIzB,CAAC,GAAGwB,CAAC,GAAG,CAAC;IAEb,KAAK,IAAId,CAAC,GAAGc,CAAC,EAAEd,CAAC,IAAIe,CAAC,GAAG,CAAC,EAAEf,CAAC,EAAE,EAAE;MAC/BkB,IAAI,CAACjB,IAAI,CAAC,CAAC,YAAY,EAAED,CAAC,EAAEe,CAAC,CAAC,CAAC;MAC/B,IAAIF,GAAG,CAACb,CAAC,CAAC,GAAGgC,KAAK,EAAE;QAClB1C,CAAC,EAAE;QACH4B,IAAI,CAACjB,IAAI,CAAC,CAAC,MAAM,EAAEX,CAAC,EAAEU,CAAC,EAAEa,GAAG,CAACvB,CAAC,CAAC,EAAEuB,GAAG,CAACb,CAAC,CAAC,CAAC,CAAC;QACzC,IAAIE,IAAI,GAAGW,GAAG,CAACvB,CAAC,CAAC;QACjBuB,GAAG,CAACvB,CAAC,CAAC,GAAGuB,GAAG,CAACb,CAAC,CAAC;QACfa,GAAG,CAACb,CAAC,CAAC,GAAGE,IAAI;MACf;MACAgB,IAAI,CAACjB,IAAI,CAAC,CAAC,WAAW,EAAED,CAAC,EAAEe,CAAC,CAAC,CAAC;IAChC;IACAG,IAAI,CAACjB,IAAI,CAAC,CAAC,MAAM,EAAEX,CAAC,GAAC,CAAC,EAAEyB,CAAC,EAAEF,GAAG,CAACvB,CAAC,GAAC,CAAC,CAAC,EAAEuB,GAAG,CAACE,CAAC,CAAC,CAAC,CAAC;IAC7C,IAAIb,IAAI,GAAGW,GAAG,CAACvB,CAAC,GAAC,CAAC,CAAC;IACnBuB,GAAG,CAACvB,CAAC,GAAC,CAAC,CAAC,GAAGuB,GAAG,CAACE,CAAC,CAAC;IACjBF,GAAG,CAACE,CAAC,CAAC,GAAGb,IAAI;IAEb,OAAO,CAACZ,CAAC,GAAC,CAAC,EAAE4B,IAAI,CAAC;EACpB;EAEA,SAASe,YAAYA,CAACpB,GAAG,EAAEd,UAAU,EAAE;IACrC,IAAIb,OAAO,GAAGC,QAAQ,CAACC,sBAAsB,CAAC,SAAS,CAAC;IACxD,MAAMe,YAAY,GAAG,IAAIC,YAAY,EAAE;IAEvC,MAAMpB,IAAI,GAAGmB,YAAY,CAACE,gBAAgB,EAAE;IAC5C,MAAMpB,IAAI,GAAGkB,YAAY,CAACE,gBAAgB,EAAE;IAE5CrB,IAAI,CAACsB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IACtCtB,IAAI,CAACqB,OAAO,CAACH,YAAY,CAACI,WAAW,CAAC;IAEtCvB,IAAI,CAACwB,KAAK,EAAE;IACZvB,IAAI,CAACuB,KAAK,EAAE;IAEZ,IAAInB,GAAG,GAAG,CAAC;IACX,KAAK,IAAIoB,CAAC,IAAIV,UAAU,EAAE;MACxB,IAAIU,CAAC,CAAC,CAAC,CAAC,KAAK,YAAY,EAAE;QACzBlB,UAAU,CAAC,MAAM;UACfP,IAAI,CAACQ,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEU,IAAI,CAACO,SAAS,CAACC,KAAK,GAAGC,QAAQ,CAACR,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,CAAC,GAAG,EAAE;UAChEW,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;UAC3CU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,KAAK;QAC7C,CAAC,EAAEa,GAAG,GAAI,CAAC,CAAC;QACZA,GAAG,IAAIrB,SAAS;MAClB,CAAC,MACI,IAAIyC,CAAC,CAAC,CAAC,CAAC,KAAK,WAAW,EAAE;QAC7BlB,UAAU,CAAC,MAAM;UACfL,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;UACzDU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;QAC3D,CAAC,EAAEa,GAAG,GAAI,CAAC,CAAC;MACd,CAAC,MACI;QACHE,UAAU,CAAC,MAAM;UACfL,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,GAAG,EAAE,GAAGkC,CAAC,CAAC,CAAC,CAAC,GAACrD,YAAY,GAAE,GAAI,GAAC,GAAG;UAC7D8B,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACC,MAAM,GAAG,EAAE,GAAGkC,CAAC,CAAC,CAAC,CAAC,GAACrD,YAAY,GAAE,GAAI,GAAC,GAAG;UAC7D8B,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;UACzDU,OAAO,CAACuB,CAAC,CAAC,CAAC,CAAC,CAAC,CAACnC,KAAK,CAACE,eAAe,GAAG,mBAAmB;QAC3D,CAAC,EAAGa,GAAG,GAAI,CAAC,CAAC;QACbA,GAAG,IAAIrB,SAAS;MAClB;IACF;IACAuB,UAAU,CAAC,MAAM;MACfR,SAAS,CAACC,IAAI,EAAEC,IAAI,CAAC;IACvB,CAAC,EAAEI,GAAG,GAAG,CAAC,CAAC;IACX9B,UAAU,CAACsD,GAAG,CAAC;EACjB;EAEA,oBACE5D,OAAA;IAAKiF,EAAE,EAAC,gBAAgB;IAAAC,QAAA,gBACtBlF,OAAA;MAAKiF,EAAE,EAAC,kBAAkB;MAAAC,QAAA,EACvBhE,UAAU;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACT,eACN7B,OAAA;MAAKiF,EAAE,EAAC,kBAAkB;MAAAC,QAAA,gBAExBlF,OAAA;QAAQmF,OAAO,EAAEA,CAAA,KAAMlE,gBAAgB,EAAG;QAAAiE,QAAA,EAAC;MAAW;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC/D7B,OAAA;QAAQmF,OAAO,EAAEA,CAAA,KAAMxC,UAAU,EAAG;QAAAuC,QAAA,EAAC;MAAa;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC3D7B,OAAA;QAAQmF,OAAO,EAAEA,CAAA,KAAM1B,aAAa,EAAG;QAAAyB,QAAA,EAAC;MAAgB;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAEjE7B,OAAA;QAAQmF,OAAO,EAAEA,CAAA,KAAM;UAAE,IAAIvC,OAAO,GAAGvC,UAAU;UAC/C,IAAIyC,UAAU,GAAGa,SAAS,CAACf,OAAO,EAAE,CAAC,EAAEvC,UAAU,CAACI,MAAM,GAAC,CAAC,CAAC;UAC3D8D,YAAY,CAAC3B,OAAO,EAAEE,UAAU,CAAC;QAAC,CAAE;QAAAoC,QAAA,EAAC;MACvC;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAET7B,OAAA;QAAQmF,OAAO,EAAEA,CAAA,KAAM;UAAC,IAAIvC,OAAO,GAAGvC,UAAU;UAC9C,IAAIyC,UAAU,GAAG6B,SAAS,CAAC/B,OAAO,EAAE,EAAE,EAAE,CAAC,EAAEA,OAAO,CAACnC,MAAM,GAAC,CAAC,CAAC;UAC5DuE,YAAY,CAACpC,OAAO,EAAEE,UAAU,CAAC;QAAC,CAAE;QAAAoC,QAAA,EAAC;MACvC;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAET7B,OAAA;QAAAkF,QAAA,EAAQ;MAAS;QAAAxD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAE1B7B,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAyD,QAAA,gBAC9BlF,OAAA;UAAAkF,QAAA,GAAO,uBAAqB,EAAC/E,YAAY;QAAA;UAAAuB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAClD7B,OAAA;UAAOoF,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,KAAK;UAACC,GAAG,EAAC,MAAM;UAACC,IAAI,EAAC,GAAG;UAAC/C,KAAK,EAAErC,YAAa;UACtEqF,QAAQ,EAAEC,CAAC,IAAI;YAACrF,UAAU,CAACsF,MAAM,CAACD,CAAC,CAACE,MAAM,CAACnD,KAAK,CAAC,CAAC;YAAEvB,gBAAgB,EAAE;UAAC,CAAE;UACzEkE,OAAO,EAAEM,CAAC,IAAI;YAACrF,UAAU,CAACsF,MAAM,CAACD,CAAC,CAACE,MAAM,CAACnD,KAAK,CAAC,CAAC;YAAEvB,gBAAgB,EAAE;UAAC;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtE,eACN7B,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAyD,QAAA,gBAC9BlF,OAAA;UAAAkF,QAAA,GAAO,mBAAiB,EAACnE,SAAS;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAC3C7B,OAAA;UAAOoF,IAAI,EAAC,OAAO;UAACC,GAAG,EAAC,KAAK;UAACC,GAAG,EAAC,GAAG;UAACC,IAAI,EAAC,KAAK;UAAC/C,KAAK,EAAEzB,SAAU;UAClEyE,QAAQ,EAAEC,CAAC,IAAIzE,YAAY,CAAC0E,MAAM,CAACD,CAAC,CAACE,MAAM,CAACnD,KAAK,CAAC,CAAE;UACpD2C,OAAO,EAAEM,CAAC,IAAIzE,YAAY,CAAC0E,MAAM,CAACD,CAAC,CAACE,MAAM,CAACnD,KAAK,CAAC;QAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACjD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAAC3B,EAAA,CA5YQD,GAAG;AAAA2F,EAAA,GAAH3F,GAAG;AA8YZ,eAAeA,GAAG;AAAC,IAAA2F,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}